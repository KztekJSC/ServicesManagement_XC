@model Kztek_Core.Models.GridModel<Kztek_Model.Models.tbl_Event>
@using Kztek_Library.Models
@using Kztek_Library.Helpers

@{
    ViewBag.Title = "Điều phối xác nhận";

    var authModel = (Kztek_Library.Models.AuthActionModel)ViewBag.AuthValue;

}

<div class="page-header">
    <h1>

        @ViewBag.Title (<span id="spCount">0</span>)
    </h1>
</div>
<div id="boxModal"></div>
<div id="boxModal1"></div>
@using (Html.BeginForm("Index", "Coordinator", FormMethod.Get, new { id = "frmService" }))
{
    @Html.Hidden("AreaCode", (string)ViewBag.AreaCodeValue)
    @Html.Hidden("chkExport", "0")
<div class="row">
    <div class="col-md-2 col-lg-2 col-xs-12 col-sm-12 divboxmd">
        Từ khóa
        <input type="text" name="key" value="@ViewBag.keyValue" placeholder=" Biển số..." class="form-control" />
    </div>

    <div class="col-md-2 col-lg-2 col-xs-12 col-sm-12 divboxmd">

        <span class="lbl">Trạng thái sự kiện </span>
        @await Component.InvokeAsync("ChosenSelect", ViewBag.Eventype)

    </div>
    <div class="col-md-2 col-lg-2 col-xs-12 col-sm-12 divboxmd">

        <span class="lbl">Dịch vụ </span>
        @await Component.InvokeAsync("ChosenSelect", ViewBag.LstService)

    </div>
    <div class="col-md-2 col-lg-2 col-xs-12 col-sm-12 divboxmd">
        Từ ngày:
        <div class="input-group">
            @Html.TextBox("fromdate", (string)ViewBag.fromdateValue, new { @class = "form-control datepicker" })
            <span class="input-group-addon">
                <i class="fa fa-calendar"></i>
            </span>

        </div>
    </div>

    <div class="col-md-2 col-lg-2 col-xs-12 col-sm-12 divboxmd">
        Đến ngày:
        <div class="input-group">
            @Html.TextBox("todate", (string)ViewBag.todateValue, new { @class = "form-control datepicker" })
            <span class="input-group-addon">
                <i class="fa fa-calendar"></i>
            </span>

        </div>
    </div>
</div>


    <div class="row">
        <div class="col-md-3 col-lg-3 col-xs-12 col-sm-12 divboxmd">
            <br />
            <button class="btn btn-white btn-primary btnSearch" type="button"><i class="fa fa-search" aria-hidden="true"></i> @await Component.InvokeAsync("Language", new { path = "BODY:BUTTON:SEARCH" }) </button>
            <a href='@Url.Action("Index", "Coordinator",new { AreaCode = ViewBag.AreaCodeValue })' class="btn btn-primary btn-white" type="submit">
                <i class="fa fa-refresh" aria-hidden="true"></i>
                Reset
            </a>
            @*<a href="javascript:void(0)" class="btnExport btn btn-white btn-primary" title="Xuất excel">
                    <i class="ace-icon fa fa-file-excel-o"></i>  @await Component.InvokeAsync("Language", new { path = "BODY:BUTTON:EXCEL" })
                </a>*@

        </div>
    </div>
}
<div class="hr hr-18 dotted hr-24"></div>
<div class="row" style="margin-left: 4px" id="BoxshowColumn">

    @await Component.InvokeAsync("MultiselectColumn", ViewBag.listSlectColumn)

</div>
<div class="hr hr-18 dotted hr-24"></div>


<div class="row" id="boxTable2">

</div>


<input type="hidden" id="Confirm_delete" value="@await Component.InvokeAsync("Language", new { path = "MESSAGEREPORT:REMOVE:CONFIRM_DELETE" })" />
<input type="hidden" id="del_Success" value="@await Component.InvokeAsync("Language", new { path = "MESSAGEREPORT:REMOVE:SUCCESS" })" />
<input type="hidden" id="noti" value="@await Component.InvokeAsync("Language", new { path = "MESSAGEREPORT:NOTIFICATION" })" />
<input type="hidden" id="false" value="@await Component.InvokeAsync("Language", new { path = "MESSAGEREPORT:ERROR1" })" />
@section scripts{
    <script src="~/modules/CoordinatorController.js"></script>
    <script>
        $(document).ready(function () {

            $(".btnExport").click(function () {

                $("#chkExport").val("1");

                $("#frmReport").submit();
            });


        
            $(".btnDelete").click(function () {
                var cmd = $(this);
                var id = cmd.attr('idata');

                bootbox.confirm($("#Confirm_delete").val(), function (result) {
                    if (result) {
                        JSHelper.AJAX_Delete('/Admin/Coordinator/Delete', id)
                            .success(function (response) {
                                if (response.isSuccess) {
                                    cmd.parent().parent().fadeOut();
                                    toastr.success($("#del_Success").val(), $("#noti").val())

                                } else if (response.isSuccess == false) {
                                    /*     cmd.parent().parent().parent().fadeOut();*/
                                    toastr.error($("#false").val())
                                }
                                else {

                                    toastr.error(response.Message)
                                }
                            });
                    }
                })
            });
            var activityTimeout = setTimeout(loadData, 30000);

            function resetActive() {
                /*  $(document.body).attr('class', 'active');*/
                clearTimeout(activityTimeout);
                activityTimeout = setTimeout(loadData, 30000);
            }

            function loadData() {
                location.reload();
            }

            // Check for mousemove, could add other events here such as checking for key presses ect.
            $(document).bind('mousemove', function () { resetActive() });
        });
    </script>
}