
@{
    ViewBag.Title = "Dịch vụ đã xác nhận";
    
}

<div class="page-header">
    <h1>

        @ViewBag.Title (<span id="spCount">0</span>)
    </h1>
</div>

@using (Html.BeginForm("Index", "Service", FormMethod.Get, new { id = "frmService" }))
{
    @Html.Hidden("AreaCode", (string)ViewBag.AreaCodeValue)
    @Html.Hidden("chkExport", "0")
    <div class="row">
        <div class="col-md-4 col-lg-4 col-xs-12 col-sm-12 divboxmd">
            Từ khóa
            <input type="text" name="key" value="@ViewBag.keyValue" placeholder="Biển số | Loại hàng | Khối lượng | Loại xe | Nhóm hàng hoá..." class="form-control" />
        </div>
        <div class="col-md-2 col-lg-2 col-xs-12 col-sm-12 divboxmd">

            <span class="lbl">Trạng thái sự kiện </span>
            @await Component.InvokeAsync("ChosenSelect", ViewBag.Eventype)

        </div>
        <div class="col-md-2 col-lg-2 col-xs-12 col-sm-12 divboxmd">

            <span class="lbl">Dịch vụ </span>
            @await Component.InvokeAsync("ChosenSelect", ViewBag.LstService)

        </div>
        <div class="col-md-2 col-lg-2 col-xs-12 col-sm-12 divboxmd">

            <span class="lbl">Tổ bốc xếp </span>
            @await Component.InvokeAsync("ChosenSelect", ViewBag.LstGrSelect)

        </div>

    </div>
    <div class="row">

        <div class="col-md-2 col-lg-2 col-xs-12 col-sm-12 divboxmd">
            Từ ngày:
            <div class="input-group">
                @Html.TextBox("fromdate", (string)ViewBag.fromdateValue, new { @class = "form-control datepicker" })
                <span class="input-group-addon">
                    <i class="fa fa-calendar"></i>
                </span>

            </div>
        </div>

        <div class="col-md-2 col-lg-2 col-xs-12 col-sm-12 divboxmd">
            Đến ngày:
            <div class="input-group">
                @Html.TextBox("todate", (string)ViewBag.todateValue, new { @class = "form-control datepicker" })
                <span class="input-group-addon">
                    <i class="fa fa-calendar"></i>
                </span>

            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-3 col-lg-3 col-xs-12 col-sm-12 divboxmd">
            <br />
            <button class="btn btn-white btn-primary btnSearch" type="button"><i class="fa fa-search" aria-hidden="true"></i> @await Component.InvokeAsync("Language", new { path = "BODY:BUTTON:SEARCH" }) </button>
            <a href='@Url.Action("Index", "Service",new { AreaCode = ViewBag.AreaCodeValue })' class="btn btn-primary btn-white" type="submit">
                <i class="fa fa-refresh" aria-hidden="true"></i>
                Reset
            </a>
            @*<a href="javascript:void(0)" class="btnExport btn btn-white btn-primary" title="Xuất excel">
                    <i class="ace-icon fa fa-file-excel-o"></i>  @await Component.InvokeAsync("Language", new { path = "BODY:BUTTON:EXCEL" })
                </a>*@

        </div>
    </div>
}
<div class="hr hr-18 dotted hr-24"></div>
<div class="row" style="margin-left: 4px" id="BoxshowColumn">

    @await Component.InvokeAsync("MultiselectColumn", ViewBag.listSlectColumn)

</div>
<div class="hr hr-18 dotted hr-24"></div>
<div class="row" id="boxTable1">

</div>


@section scripts{
    <script src="~/modules/ServiceController.js"></script>
    <script src="~/modules/Signalr.js"></script>
  
    <script>
     

           
  
        $(document).ready(function () {
            ServiceController.PartialService(1);
            $('#columnId').change(function () {
                var str = "";
                var cmd = $(this);
                cmd.parent().find('ul.multiselect-container li.active').each(function () {
                    var _cmd = $(this);
                    str += _cmd.find('input[type=checkbox]').val() + ",";
                });
                ServiceController.AddValueSelect(str, "Service", "Index");

            });
           
            var activityTimeout = setTimeout(loadData, 600000);

            function resetActive() {
               /* $(document.body).attr('class', 'active');*/
                clearTimeout(activityTimeout);
                activityTimeout = setTimeout(loadData, 600000);
            }

            function loadData() {
                location.reload();
            }

            // Check for mousemove, could add other events here such as checking for key presses ect.
            $(document).bind('mousemove', function () { resetActive() });
        });
    </script>
}