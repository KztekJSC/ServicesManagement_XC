@model Kztek_Core.Models.GridModel<Kztek_Model.Models.tbl_Event>
@using Kztek_Library.Models

@{
    var lstGroup = (List<Kztek_Model.Models.Group>)ViewBag.Groups;

    var authModel = (Kztek_Library.Models.AuthActionModel)ViewBag.AuthValue;

    var lst = (List<Kztek_Model.Models.Service>)ViewBag.lstService;

    var shows = new List<string>();

    var objColum = (Kztek_Model.Models.ColumTable)ViewBag.showColumn;

    shows = objColum.ColumShows != null ? objColum.ColumShows.Split(new[] { ',' }, StringSplitOptions.RemoveEmptyEntries).ToList() : shows;


}

@Html.Hidden("totalCount", Model.TotalIem)

<div class="col-xs-12">
    <table class="table  table-bordered table-hover">
        <thead>
            <tr id="headColumn">
                <th class="text-center  stt" idata="1" style="display :@string.Format("{0}",shows.Contains("1")   ? "" : "none")">STT</th>
                <th class="text-center" idata="2" style="display :@string.Format("{0}",shows.Contains("2") ? "" : "none")">Số trang</th>
                <th class="text-center" idata="3" style="display :@string.Format("{0}",shows.Contains("3")  ? "" : "none")">
                    Trạng thái
                </th>
                <th class="text-center" idata="4" style="display :@string.Format("{0}",shows.Contains("4")? "" : "none")">
                    Xe VN
                </th>
                <th class="text-center" idata="5" style="display :@string.Format("{0}",shows.Contains("5")  ? "" : "none")">
                    Xe CN
                </th>
                <th class="text-center" idata="6" style="display :@string.Format("{0}",shows.Contains("6")  ? "" : "none")">Loại hàng </th>
                <th class="text-center" idata="7" style="display :@string.Format("{0}",shows.Contains("7") ? "" : "none")">Khối lượng</th>
                <th class="text-center" idata="8" style="display :@string.Format("{0}",shows.Contains("8") ? "" : "none")">Loại xe</th>
                <th class="text-center" idata="9" style="display :@string.Format("{0}",shows.Contains("9") ? "" : "none")">Nhóm hàng</th>
                <th class="text-center" idata="10" style="display :@string.Format("{0}",shows.Contains("10") ? "" : "none")">Dịch vụ</th>
                <th class="text-center" idata="11" style="display :@string.Format("{0}",shows.Contains("11")? "" : "none")">Giá dịch vụ</th>
                <th class="text-center" idata="12" style="display :@string.Format("{0}",shows.Contains("12")? "" : "none") ">Phụ thu</th>
                <th class="text-center" idata="13" style="display :@string.Format("{0}",shows.Contains("13")? "" : "none")">Ghi chú </th>
                <th class="text-center" idata="14" style="display :@string.Format("{0}",shows.Contains("14")? "" : "none")">Tổ bốc xếp</th>
                <th class="text-left" idata="15" style="display :@string.Format("{0}",shows.Contains("15")? "" : "none")">Ảnh CN </th>
                <th class="text-left" idata="16" style="display :@string.Format("{0}",shows.Contains("16")? "" : "none")">Ảnh VN </th>
                <th class="text-left" idata="17" style="display :@string.Format("{0}",shows.Contains("17")? "" : "none")">Vị trí đỗ </th>
                <th class="text-left" idata="18" style="display :@string.Format("{0}",shows.Contains("18")? "" : "none")">Ngày tạo </th>
                <th class="text-center"></th>
            </tr>
        </thead>

        <tbody>
            @if (Model.Data.Any())
            {

                var count = Model.PageSize * (Model.PageIndex - 1);
                foreach (var item in Model.Data)
                {
                    count++;

            <tr id="sId_@item.Id">
                <td class="text-center stt" idata="1" style="display :@string.Format("{0}",shows.Contains("1")   ? "" : "none")">
                    @count
                </td>
                <td class="text-left" idata="2" style="display :@string.Format("{0}",shows.Contains("2")   ? "" : "none")">
                    @item.ServiceCode
                </td>

                <td class="text-center" idata="3" style="display :@string.Format("{0}",shows.Contains("3")   ? "" : "none")">

                    @if (item.EventType == 1)
                    {
                        <span class="label label-grey">Chờ xác nhận</span>
                    }
                    else if (item.EventType == 2)
                    {
                        <span class="label label-yellow ">Đã xác nhận</span>
                    }



                </td>
                <td class="center" idata="4" style="display :@string.Format("{0}",shows.Contains("4")   ? "" : "none")">
                    @item.PlateVN
                </td>
                <td class="center" idata="5" style="display :@string.Format("{0}",shows.Contains("5")   ? "" : "none")">
                    @item.PlateCN
                </td>
                <td class="center" idata="6" style="display :@string.Format("{0}",shows.Contains("6")   ? "" : "none")">
                    @item.ProductType
                </td>
                <td class="center" idata="7" style="display :@string.Format("{0}",shows.Contains("7")   ? "" : "none")">
                    @item.Weight
                </td>
                <td class="center" idata="8" style="display :@string.Format("{0}",shows.Contains("8")   ? "" : "none")">
                    @item.VehicleType
                </td>
                <td class="center" idata="9" style="display :@string.Format("{0}",shows.Contains("9")   ? "" : "none")">
                    @item.ProductGroup
                </td>
                <td class="center" idata="10" style="display :@string.Format("{0}",shows.Contains("10")   ? "" : "none")">
                    @{
                        if (item.Service != null)
                        {

                            var obj1 = lst != null ? lst.FirstOrDefault(n => n.Id.ToLower() == item.Service.ToLower()) : null;
                            if (obj1 != null)
                            {
                                <span>@obj1.Name</span>
                            }
                        }
                    }
                </td>
                <td class="center" idata="11" style="display :@string.Format("{0}",shows.Contains("11")   ? "" : "none")">
                    @item.Price.ToString("###,###.##")
                </td>
                <td class="center" idata="12" style="display :@string.Format("{0}",shows.Contains("12")   ? "" : "none")">
                    @item.SubPrice.ToString("###,###.##")
                </td>
                <td class="center" idata="13" style="display :@string.Format("{0}",shows.Contains("13")   ? "" : "none")">
                    @item.Description
                </td>
                <td class="center" idata="14" style="display :@string.Format("{0}",shows.Contains("14")   ? "" : "none")">
                    @{
                        var obj = lstGroup != null ? lstGroup.FirstOrDefault(n => n.Id.ToLower() == item.GroupId.ToLower()) : null;
                        if (obj != null)
                        {
                            <span>@obj.Name</span>
                        }
                    }
                </td>
                <td class="center" idata="15" style="display :@string.Format("{0}",shows.Contains("15")   ? "" : "none")">
                    <div class="ace-thumbnails clearfix">

                        @if (!string.IsNullOrWhiteSpace(item.ImageCN))
                        {
                            var newobj = new ImageFPTModel
                            {
                                Filename = item.ImageCN,
                                Type = "INOUT",
                                Description = "Ảnh"
                            };
                            @await Component.InvokeAsync("ImageFPT", newobj)

                        }
                    </div>

                </td>
                <td class="center" idata="16" style="display :@string.Format("{0}",shows.Contains("16")   ? "" : "none")">
                    <div class="ace-thumbnails clearfix">
                        @if (!string.IsNullOrWhiteSpace(item.ImageVN))
                        {
                            var newobj = new ImageFPTModel
                            {
                                Filename = item.ImageVN,
                                Type = "INOUT",
                                Description = "Ảnh"
                            };
                            @await Component.InvokeAsync("ImageFPT", newobj)

                        }
                    </div>

                </td>
                <td class="center" idata="11" style="display :@string.Format("{0}",shows.Contains("17")   ? "" : "none")">
                    @item.ParkingPosition
                </td>
                <td class="center" idata="11" style="display :@string.Format("{0}",shows.Contains("18")   ? "" : "none")">
                    @item.CreatedDate.ToString("dd/MM/yyyy")
                </td>
                <td class="center">

                    <div class="btn-group">
                        @await Html.PartialAsync("~/Views/Shared/Partials/ActionPartial.cshtml", new Kztek_Library.Models.AuthPartialModel()
                   {
                       ControllerName = "Service",
                       ActionName = "Update",
                       RecordId = "",
                       model = new { id = item.Id },
                       Auth_Value = authModel
                   })
                        @await Html.PartialAsync("~/Views/Shared/Partials/ActionPartial.cshtml", new Kztek_Library.Models.AuthPartialModel()
                        {
    ControllerName = "Service",
    ActionName = "Delete",
    RecordId = item.Id,
    model = null,
    Auth_Value = authModel
    })
                    </div>
                </td>


            </tr>
                }
            }
        </tbody>
    </table>
</div>
@if (Model.Data.Any())
{
    <div class="col-xs-12" id="pagService">
        <div class="pull-right">


            @Html.GeneratePagingFooterAjax(Model.TotalPage, Model.TotalIem, Model.PageIndex, Model.PageSize, "pagination", x => Url.Action("Partial_Service", "Service", new
       {
           page = x,
           key = ViewBag.keyValue,
           StatusID = ViewBag.StatusID,
           ServiceId = ViewBag.ServiceID,
           GroupId = ViewBag.GroupID,
           fromdate = ViewBag.fromdateValue,
           todate = ViewBag.todateValue

       }))
        </div>
    </div>
}

